install.packages("tibble")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
install.packages("stringi")
install.packages("stringi")
options(timeout = max(1000, getOption("timeout")))
install.packages("stringi")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
df1 %>%
pivot_wider(names_from = var, values_from = val)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
mr.ted
df <- tibble(lines = 1:length(mr.ted), text = mr.ted)
df
library(tidytext)
install.packages("tidytext")
library(tidytext)
df.words <- df %>%
unnest_tokens(word, text)
df.words
df.words %>%
count(word, sort = TRUE)
library(ggplot2)
df.words %>%
count(word, sort = TRUE) %>%
mutate(word1 = reorder(word, n)) %>%
ggplot() +
geom_col(aes(word1, n)) +
coord_flip()
iris
band_members
band_instruments
band_members %>% inner_join(band_instruments)
band_members %>% left_join(band_instruments)
band_members %>% full_join(band_instruments)
band_members %>% anti_join(band_instruments)
install.packages("gutenbergr")
install.packages("C:/Users/bogum/Downloads/gutenbergr_0.2.1.tar.gz", repos = NULL, type = "source")
install.packages("urltools")
install.packages("lazyeval")
install.packages("C:/Users/bogum/Downloads/gutenbergr_0.2.1.tar.gz", repos = NULL, type = "source")
library(gutenbergr)
gutenberg_works()
gutenberg_works(languages = "pl") %>%
filter(author == "Mickiewicz, Adam")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
gutenberg_works(languages = "pl") %>%
filter(author == "Mickiewicz, Adam")
gutenberg_download(31536)
#stop words w tidy text
stop_words
df <- data.frame(x=rnorm(1000))
df1 <- data.frame(x=rnorm(1000), y = runif(1000))
install.packages("gridExtra")
library(gridExtra)
library(gridextra)
library(gridExtra)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
twenty_th_leagues
stop_words
ulysses_words <- ulysses %>%
unnest_tokens(word, text)
ulysses_words
ulysses
ulysses_words
stop_words
ulysses_words
ulysses_words <- ulysses$text %>%
unnest_tokens(word, text)
ulysses
ulysses$text
ulysses[, "text"]
ulysses_words <- ulysses %>%
select(text) %>%
unnest_tokens(word, text)
ulysses_words
twenty_th_leagues_words <- twenty_th_leagues %>%
select(text) %>%
unnest_tokens(word, text)
twenty_th_leagues_words
g1 <- ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n)) %>%
ggplot() +
geom_col(aes(words, n)) +
coord_flip()
plot(g1)
ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE)
ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n), n)
ulysses_words %<>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n), n)
ulysses_words
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
ulysses_words
twenty_th_leagues_words
ulysses_words %>%
slice(1:10)
twenty_th_leagues_words %>%
slice(1:10)
g1 <- ulysses_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g1)
g2 <- twenty_th_leagues_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g2)
ulysses_words
stop_words
ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10)
g3 <- ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
?anti_join
g3 <- ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
g4 <- twenty_th_leagues_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g4)
grid.arrange(g1,g2,g3,g4)
?grid.arrange
g <- grid.arrange(g1,g2,g3,g4, top ="abc")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2,
top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3)))
g1 <- ulysses_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip() + ggtitle("title")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2, left = "with/without stop words")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
setwd("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2")
library(gutenbergr)
library(dplyr)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab4/lab4.R")
books <- g[g$gutenberg_id %in% c(83, 103, 1268),c("gutenberg_id","title")]
g <- gutenberg_works()
v <- gutenberg_download(c(83, 103, 1268))
v <- gutenberg_download(c(83, 103, 1268))
books <- g[g$gutenberg_id %in% c(83, 103, 1268),c("gutenberg_id","title")]
books
v %<>% left_join(books) %>%
mutate(gutenberg_id = NULL)
v
verne_words <- v %>%
unnest_tokens(word, text) %>%
count(title, word, sort = TRUE)
verne_words
total_words <- verne_words %>%
group_by(title) %>%
summarise(total = sum(n))
total_words
verne_words %<>% left_join(total_words)
verne_words
verne_freq <- verne_words %>%
group_by(title) %>%
mutate(rank = row_number(), freq = n / total)
verne_freq
ggplot(verne_freq) +
geom_line(aes(x = rank, y = freq, color = title)) +
scale_x_log10() + scale_y_log10() +
theme(legend.position = "bottom")
ggplot(verne_freq) +
geom_histogram(aes(x = freq, fill = title, color = title), alpha = 0.3, position="identity") +
scale_x_log10() + scale_y_log10()
library(fields)
install.packages("fields")
data <- verne_freq %>% ungroup() %>%
filter(title == "The Mysterious Island") %>%
select(rank, freq)
data
log.scale <- function(x, n) exp(seq(log(x[1]), log(x[length(x)]), length.out = n))
ranks.scale <- with(data, seq(min(rank), max(rank), length.out = 20))
ranks.scale <- log.scale(ranks.scale, 20)
ranks.scale
freq.sb <- stats.bin(data$rank, data$freq, breaks = ranks.scale)
freq.sb
freq.sb <- stats.bin(data$rank, data$freq, breaks = ranks.scale)
