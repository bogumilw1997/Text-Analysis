df <- tibble(lines = 1:length(mr.ted), text = mr.ted)
df
library(tidytext)
install.packages("tidytext")
library(tidytext)
df.words <- df %>%
unnest_tokens(word, text)
df.words
df.words %>%
count(word, sort = TRUE)
library(ggplot2)
df.words %>%
count(word, sort = TRUE) %>%
mutate(word1 = reorder(word, n)) %>%
ggplot() +
geom_col(aes(word1, n)) +
coord_flip()
iris
band_members
band_instruments
band_members %>% inner_join(band_instruments)
band_members %>% left_join(band_instruments)
band_members %>% full_join(band_instruments)
band_members %>% anti_join(band_instruments)
install.packages("gutenbergr")
install.packages("C:/Users/bogum/Downloads/gutenbergr_0.2.1.tar.gz", repos = NULL, type = "source")
install.packages("urltools")
install.packages("lazyeval")
install.packages("C:/Users/bogum/Downloads/gutenbergr_0.2.1.tar.gz", repos = NULL, type = "source")
library(gutenbergr)
gutenberg_works()
gutenberg_works(languages = "pl") %>%
filter(author == "Mickiewicz, Adam")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab2/lab2.R")
gutenberg_works(languages = "pl") %>%
filter(author == "Mickiewicz, Adam")
gutenberg_download(31536)
#stop words w tidy text
stop_words
df <- data.frame(x=rnorm(1000))
df1 <- data.frame(x=rnorm(1000), y = runif(1000))
install.packages("gridExtra")
library(gridExtra)
library(gridextra)
library(gridExtra)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
twenty_th_leagues
stop_words
ulysses_words <- ulysses %>%
unnest_tokens(word, text)
ulysses_words
ulysses
ulysses_words
stop_words
ulysses_words
ulysses_words <- ulysses$text %>%
unnest_tokens(word, text)
ulysses
ulysses$text
ulysses[, "text"]
ulysses_words <- ulysses %>%
select(text) %>%
unnest_tokens(word, text)
ulysses_words
twenty_th_leagues_words <- twenty_th_leagues %>%
select(text) %>%
unnest_tokens(word, text)
twenty_th_leagues_words
g1 <- ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n)) %>%
ggplot() +
geom_col(aes(words, n)) +
coord_flip()
plot(g1)
ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE)
ulysses_words %>%
count(word, sort = TRUE) %>%
mutate(words = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n))
ulysses_words %>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n), n)
ulysses_words %<>%
count(word, sort = TRUE) %>%
transmute(word = reorder(word, n), n)
ulysses_words
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
ulysses_words
twenty_th_leagues_words
ulysses_words %>%
slice(1:10)
twenty_th_leagues_words %>%
slice(1:10)
g1 <- ulysses_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g1)
g2 <- twenty_th_leagues_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g2)
ulysses_words
stop_words
ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10)
g3 <- ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
?anti_join
g3 <- ulysses_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
g4 <- twenty_th_leagues_words %>%
anti_join(stop_words) %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip()
plot(g4)
grid.arrange(g1,g2,g3,g4)
?grid.arrange
g <- grid.arrange(g1,g2,g3,g4, top ="abc")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2,
top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3)))
g1 <- ulysses_words %>%
slice(1:10) %>%
ggplot() +
geom_col(aes(word, n)) +
coord_flip() + ggtitle("title")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad1/zad1.R")
g <- grid.arrange(g1,g2,g3,g4, ncol=2, nrow=2, left = "with/without stop words")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Downloads/zad2.r")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad2/zad2.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab4/lab4.R")
freq.sb
zipf1.lm <- lm(log(freq.sb$stats[2,]) ~ log(freq.sb$centers))
summary(zipf1.lm)
A <- zipf1.lm$coefficients[1]
alfa <- zipf1.lm$coefficients[2]
plot(freq.sb$centers, freq.sb$stats[2,], log="xy", xlab = "ranga r",
ylab = "czestoc f", pch = 19, cex = 1.2,
main = substitute(paste("Rangowe prawo Zipfa ", alpha,"=",a),list(a = round(alfa, 2))))
lines(ranks.scale, exp(A) * ranks.scale ** alfa, col = "red", lty = 2, lwd = 2)
summary(zipf1.lm)
freqs.scale <- with(data, seq(min(freq), max(freq), length.out = 20))
freqs.scale <- log.scale(freqs.scale, 20)
h <- hist(data$freq, breaks = freqs.scale, plot = FALSE)
freq.lm <- lm(log(h$density) ~ log(h$mids))
summary(freq.lm)
A <- freq.lm$coefficients[1]
alfa <- freq.lm$coefficients[2]
plot(h$mids, h$density, log="xy", xlab = "czestosc f", ylab = "P(f)",
pch = 19, cex = 1.2,
main = substitute(paste("Czestosciowe prawo Zipfa ", alpha,"=",a),list(a = round(alfa, 2))))
lines(freqs.scale, exp(A) * freqs.scale ** alfa, col = "red", lty = 2, lwd = 2)
verne_heaps <- v %>%
unnest_tokens(word, text) %>%
group_by(title) %>%
mutate(M = row_number(), V = cumsum(!duplicated(word)))
verne_heaps
verne_sum <- verne_heaps %>%
summarise(a = lm(log10(V) ~ log10(M))$coefficients[1], b = lm(log10(V) ~ log10(M))$coefficients[2])
verne_sum
ggplot(verne_heaps, aes(M, V, color = title)) +
geom_line() +
geom_abline(data = verne_sum, aes(intercept = a, slope = b, color = title), linetype = "dashed") +
theme(legend.position = "bottom") +
scale_x_log10() + scale_y_log10() +
facet_grid(~title)
<-
make.lm <- function(data, threshold) {
data %>%
filter(M > 10 & M < threshold) %>%
summarise(th = threshold, A = lm(log(V) ~ log(M))$coefficients[1], beta = lm(log(V) ~ log(M))$coefficients[2])
}
threshold <- seq(100, 20000, 100)
lm.res <- do.call(rbind, lapply(threshold, make.lm, data = verne_heaps))
lm.res
ggplot(lm.res) +
geom_line(aes(th, beta, color = title)) +
theme(legend.position = "bottom") +
facet_grid(~title)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_fr_books)
verne_fr_books <- g[g$gutenberg_id %in% c(799, 800, 4548, 4717, 4791, 5081, 5126)]
verne_fr_books <- g[g$gutenberg_id %in% c(799, 800, 4548, 4717, 4791, 5081, 5126),]
View(verne_fr_books)
verne_fr_books <- g[g$gutenberg_id %in% c(83, 103, 3526, 4717, 4791, 5081, 5126),]
View(verne_fr_books)
verne_fr_books <- verne_fr[verne_fr$gutenberg_id %in% c(83, 103, 3526, 4717, 4791, 5081, 5126),]
View(verne_fr_books)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_en)
View(verne_en_books)
View(verne_fr_books)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
verne_fr_books[match(verne_fr_ids, verne_fr_books$gutenberg_id),]
verne_en_books <-verne_fr_books[match(verne_fr_ids, verne_fr_books$gutenberg_id),]
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_fr_books)
View(verne_en_books)
View(verne_en_books)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_fr_books)
View(verne_en_books)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_fr_books)
View(verne_en_books)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
v <- gutenberg_download(c(verne_en_ids,verne_fr_ids))
View(v)
v %<>% left_join(rbind(verne_en_books, verne_fr_books)) %>%
mutate(gutenberg_id = NULL)
View(v)
v <- gutenberg_download(c(verne_en_ids,verne_fr_ids))
v1 %<>% left_join(rbind(verne_en_books, verne_fr_books)) %>%
mutate()
v1 %<>% left_join(rbind(verne_en_books, verne_fr_books))
v1 <- left_join(v, rbind(verne_en_books, verne_fr_books))
View(v1)
v %<>% left_join(v, rbind(verne_en_books, verne_fr_books))
library(magrittr)
v %<>% left_join(v, rbind(verne_en_books, verne_fr_books))
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
library(gutenbergr)
library(gridExtra)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidytext)
library(magrittr)
rm(list = ls())
g <- gutenberg_works()
verne_en <- gutenberg_works(languages = "en") %>%
filter(author == "Verne, Jules")
verne_fr <- gutenberg_works(languages = "fr") %>%
filter(author == "Verne, Jules")
verne_fr_ids <- c(799, 800, 4548, 4717, 4791, 5081, 5126, 7442, 11927, 14163)
verne_fr_books <- verne_fr[verne_fr$gutenberg_id %in% verne_fr_ids,c("gutenberg_id","title")]
verne_en_ids <- c(83, 103, 3526, 16457, 3748, 1355, 3808, 1842, 29413, 2083)
verne_en_books <- verne_en[verne_en$gutenberg_id %in% verne_en_ids,c("gutenberg_id","title")]
verne_fr_books <-verne_fr_books[match(verne_fr_ids, verne_fr_books$gutenberg_id),]
verne_en_books <-verne_en_books[match(verne_en_ids, verne_en_books$gutenberg_id),]
v <- gutenberg_download(c(verne_en_ids,verne_fr_ids))
v <- left_join(v, rbind(verne_en_books, verne_fr_books))
View(v)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
v
View(v)
verne_heaps <- v %>%
unnest_tokens(word, text) %>%
group_by(title) %>%
mutate(M = row_number(), V = cumsum(!duplicated(word)))
verne_heaps
View(verne_heaps)
verne_sum <- verne_heaps %>%
summarise(a = lm(log10(V) ~ log10(M))$coefficients[1], b = lm(log10(V) ~ log10(M))$coefficients[2])
verne_sum
View(verne_sum)
View(v)
View(verne_fr)
verne_sum_ <- left_join(verne_sum, rbind(verne_en_books, verne_fr_books))
View(verne_sum_)
verne_sum <- left_join(verne_sum, rbind(verne_en_books, verne_fr_books))
View(verne_sum)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
View(verne_sum)
verne_sum[verne_sum$gutenberg_id %in% verne_en_ids]
verne_sum[verne_sum$gutenberg_id %in% verne_en_ids,]
verne_sum[verne_sum$gutenberg_id %in% verne_fr_ids,]
verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]
verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),]
verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),b]
verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),"b"]
df <- data.frame(b_en = verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),"b"],
b_fr = verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),"b"])
View(df)
b_en <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),"b"]
b_fr <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),"b"]
df <- data.frame(b_en, b_fr)
b_en <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),"b"]$b
b_fr <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),"b"]$b
df <- data.frame(b_en, b_fr)
b_fr <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id)]$b
b_fr <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b
b_en <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),]$b
df <- data.frame(b_en, b_fr)
View(verne_sum)
b_en_error <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),]$b_error
b_fr_erro <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b_error
df <- data.frame(b_en, b_en_error, b_fr, b_fr_erro)
b_fr_error <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b_error
df <- data.frame(b_en, b_en_error, b_fr, b_fr_erro)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) + geom_pointrange(aes(ymin=len-sd, ymax=len+sd))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) + geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_erro))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) + geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_erro,
xmin=b_en-b_en_error, xmax=b_en+b_en_error))
plot(g1)
g1 + xlab("cross similarity")
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_erro,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle","+ cross"))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_erro,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32))
plot(g1)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
df <- data.frame(b_en, b_en_error, b_fr, b_fr_error)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_erro,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_erro, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32))
plot(g1)
b_fr_error <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b_error
df <- data.frame(b_en, b_en_error, b_fr, b_fr_error)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32))
plot(g1)
cor.test(df$b_en, df$b_fr)
?cor.test
cor.test(df$b_en, df$b_fr)$p.value
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32, ", p:", cor.test(df$b_en, df$b_fr)$p.value))
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32, ", p:", cor.test(df$b_en, df$b_fr)$p.value))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32, ", p:", round(cor.test(df$b_en, df$b_fr)$p.value)))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32, ", p:", round(cor.test(df$b_en, df$b_fr)$p.value), 4))
plot(g1)
?round
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", 32, ", p:", round(cor.test(df$b_en, df$b_fr)$p.value), 6))
plot(g1)
cor.test(df$b_en, df$b_fr)$p.value
?cor.test
cor.test(df$b_en, df$b_fr)$statistic
cor.test(df$b_en, df$b_fr)$estimate
cor.test(df$b_en, df$b_fr)$estimate[1]
cor.test(df$b_en, df$b_fr)$estimate
round(cor.test(df$b_en, df$b_fr)$estimate)
round(cor.test(df$b_en, df$b_fr)$estimate, 2)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", round(cor.test(df$b_en, df$b_fr)$estimate, 2), ", p:", round(cor.test(df$b_en, df$b_fr)$p.value), 6))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", round(cor.test(df$b_en, df$b_fr)$estimate, 2), ", p:", round(cor.test(df$b_en, df$b_fr)$p.value, 4)))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", round(cor.test(df$b_en, df$b_fr)$estimate, 2), ", p:", round(cor.test(df$b_en, df$b_fr)$p.value, 3)))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, corr:", round(cor.test(df$b_en, df$b_fr)$estimate, 2), ", p-value:", round(cor.test(df$b_en, df$b_fr)$p.value, 3)))
plot(g1)
g1 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) + ggtitle(paste("Non-shuffle, cor:", round(cor.test(df$b_en, df$b_fr)$estimate, 2), ", p-value:", round(cor.test(df$b_en, df$b_fr)$p.value, 3)))
plot(g1)
cor.test(df$b_en, df$b_fr)
View(verne_heaps)
sample(verne_heaps$word)
View(v)
v %>%
unnest_tokens(word, text)
v %>%
unnest_tokens(word, text)%>%
group_by(title)
v %>%
split(.$gutenberg_id) %>%
.[sample(names(.))] %>%
bind_rows
v1 <- v %>%
split(.$gutenberg_id) %>%
.[sample(names(.))] %>%
bind_rows
View(v1)
v1 <- v %>%
split(.$gutenberg_id) %>%
.[sample(word(.))] %>%
bind_rows
print(x)
for (x in verne_fr_ids) {
print(x)
}
v1 <- data.frame(v)
v1 <- v %>%
unnest_tokens(word, text)%>%
group_by(title)
v1[v1$gutenberg_id == id, "word"] = sample(v1$word)
v1[v1$gutenberg_id == 799, "word"]
sample(v1[v1$gutenberg_id == 799, "word"])
sample(v1[v1$gutenberg_id == 799, "word"])
sample(v1[v1$gutenberg_id == 799, "word"])
sample(v1[v1$gutenberg_id == 799]$word)
sample(v1[v1$gutenberg_id == 799, ]$word)
v1[v1$gutenberg_id == id, "word"] = sample(v1[v1$gutenberg_id == id, ]$word)
print(id)
for (id in verne_fr_ids) {
print(id)
}
for (id in verne_fr_ids) {
v1[v1$gutenberg_id == id, "word"] = sample(v1[v1$gutenberg_id == id, ]$word)
}
for (id in verne_en_ids) {
v1[v1$gutenberg_id == id, "word"] = sample(v1[v1$gutenberg_id == id, ]$word)
}
verne_heaps <- v1 %>%
mutate(M = row_number(), V = cumsum(!duplicated(word)))
View(verne_heaps)
verne_sum <- verne_heaps %>%
summarise(a = lm(log10(V) ~ log10(M))$coefficients[1], a_error = summary(lm(log10(V) ~ log10(M)))$coefficients[1,2],
b = lm(log10(V) ~ log10(M))$coefficients[2], b_error = summary(lm(log10(V) ~ log10(M)))$coefficients[2,2])
verne_sum <- left_join(verne_sum, rbind(verne_en_books, verne_fr_books))
b_en <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),]$b
b_fr <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b
b_en_error <- verne_sum[match(verne_en_ids, verne_sum$gutenberg_id),]$b_error
b_fr_error <- verne_sum[match(verne_fr_ids, verne_sum$gutenberg_id),]$b_error
df <- data.frame(b_en, b_en_error, b_fr, b_fr_error)
g2 <- ggplot(df, aes(x=b_en, y=b_fr)) +
geom_pointrange(aes(ymin=b_fr-b_fr_error, ymax=b_fr+b_fr_error,
xmin=b_en-b_en_error, xmax=b_en+b_en_error)) +
ggtitle(paste("Shuffle, cor:", round(cor.test(df$b_en, df$b_fr)$estimate, 2),
", p-value:", round(cor.test(df$b_en, df$b_fr)$p.value, 3)))
plot(g2)
g <- grid.arrange(g1,g2, ncol=2, nrow=1, left = "TF-IDF/TF", top = "cross/cosinus")
g <- grid.arrange(g1,g2, ncol=1, nrow=2, left = "TF-IDF/TF", top = "cross/cosinus")
g <- grid.arrange(g1,g2, ncol=1, nrow=2)
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3/zad3.R")
install.packages("quanteda")
setwd("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/zad3")
setwd("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab5")
source("C:/Users/bogum/Desktop/mgr_studia/semestr3/Text/lab5/lab5.R")
install.packages("quanteda.textstats")
install.packages("quanteda.textplots")
install.packages("ggraph")
data
library(quanteda)
